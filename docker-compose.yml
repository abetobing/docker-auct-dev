version: '2'
services:
  postgresql:
    image: 'postgres:11.4'
    environment:
      - POSTGRES_USER=auctDev
      - POSTGRES_PASSWORD=auctDev#2019
    ports:
      - 15432:5432
      - 15432:5432/udp
    volumes:
      - /opt/var/lib/postgresql/data:/var/lib/postgresql/data
    mem_limit: 128m
    mem_reservation: 64m
  # elasticsearch:
  #   image: 'docker.elastic.co/elasticsearch/elasticsearch:6.4.3'
  #   environment:
  #     - ES_JAVA_OPTS=-Xmx128m -Xms64m
  #     - discovery.type=single-node
  #   ports:
  #     - 9200:9200
  #   mem_limit: 128m
  #   mem_reservation: 64m
  # zookeeper:
  #   extends:
  #     file: kafka.yml
  #     service: zookeeper
  #   mem_limit: 128m
  #   mem_reservation: 64m
  # kafka:
  #   extends:
  #     file: kafka.yml
  #     service: kafka
  #   mem_limit: 256m
  #   mem_reservation: 128m
  # jhipster-registry:
  #   extends:
  #     file: jhipster-registry.yml
  #     service: jhipster-registry
  #   mem_limit: 256m
  #   mem_reservation: 128m
  jhipster-registry:
    image: jhipster/jhipster-registry:v5.0.2
    mem_limit: 256m
    mem_reservation: 128m
    volumes:
      - /opt/auctdev/central-server-config:/central-config
    # By default the JHipster Registry runs with the "dev" and "native"
    # Spring profiles.
    # "native" profile means the filesystem is used to store data, see
    # http://cloud.spring.io/spring-cloud-config/spring-cloud-config.html
    environment:
      # - JAVA_OPTS=-Xmx256m -Xms128m
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_SECURITY_USER_PASSWORD=admin
      - JHIPSTER_REGISTRY_PASSWORD=admin
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=native
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_LOCATIONS=file:./central-config
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=git
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_URI=https://github.com/jhipster/jhipster-registry/
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_PATHS=central-config
      - JHIPSTER_LOGGING_LOGSTASH_ENABLED=false
      # - JHIPSTER_LOGGING_LOGSTASH_HOST=jhipster-logstash
      # - JHIPSTER_METRICS_LOGS_ENABLED=true
      # - JHIPSTER_METRICS_LOGS_REPORTFREQUENCY=60
      # change the name of UAA server here, if needed
      # - JHIPSTER_SECURITY_CLIENT_AUTHORIZATION_TOKEN_SERVICE_ID=uaa
    ports:
      - 8761:8761
  # jhipster-logstash:
  #   image: jhipster/jhipster-logstash:v4.1.0
  #   environment:
  #     - LS_JAVA_OPTS=-Xmx128m -Xms64m
  #     - INPUT_TCP_PORT=5000
  #     - INPUT_UDP_PORT=5000
  #     - ELASTICSEARCH_HOST=elasticsearch
  #     - ELASTICSEARCH_PORT=9200
  #     - LOGSTASH_DEBUG=false
  #   ports:
  #     - 5000:5000
  #     - 5000:5000/udp
  # jhipster-zipkin:
  #   image: jhipster/jhipster-zipkin:v4.1.0
  #   ports:
  #     - 9411:9411
  #   environment:
  #     - JAVA_OPTS=-Xmx128m -Xms64m
  #     - ES_HOSTS=http://elasticsearch:9200
  #     - ZIPKIN_UI_LOGS_URL=http://localhost:5601/app/kibana#/discover/d0682f20-e0e9-11e7-9c68-0b9a0f0c183c?_g=(refreshInterval:(display:Off,pause:!f,value:0),time:(from:now-30d,mode:quick,to:now))&_a=(columns:!(X-B3-TraceId,app_name,level,message),filters:!(('$state':(store:appState),meta:(alias:!n,disabled:!f,index:'logs-*',key:X-B3-TraceId,negate:!f,params:(query:'trace',type:phrase),type:phrase,value:'trace'),query:(match:(X-B3-TraceId:(query:'{traceId}',type:phrase))))),index:'logs-*',interval:auto,query:(language:lucene,query:''),sort:!('@timestamp',desc))
  #   mem_limit: 128m
  #   mem_reservation: 64m
